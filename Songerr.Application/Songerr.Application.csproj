<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <InvariantGlobalization>true</InvariantGlobalization>
        <UserSecretsId>166a39ba-e06a-4952-ae2c-c3d30788d19f</UserSecretsId>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <Folder Include="Logs\"/>
        <Folder Include="wwwroot\"/>
    </ItemGroup>

    <ItemGroup>
        <None Update="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Include="wwwroot\Assets\Images\logo.png"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Songerr.Domain\Songerr.Domain.csproj"/>
        <ProjectReference Include="..\Songerr.Infrastructure\Songerr.Infrastructure.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AspNetCore.HealthChecks.UI" Version="8.0.2"/>
        <PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="8.0.1"/>
        <PackageReference Include="AspNetCore.HealthChecks.UI.InMemory.Storage" Version="8.0.1"/>
        <PackageReference Include="AspNetCore.HealthChecks.Uris" Version="8.0.1"/>
        <PackageReference Include="AutoMapper" Version="13.0.1"/>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" Version="8.0.8"/>
        <PackageReference Include="Serilog.Enrichers.Environment" Version="3.0.1"/>
        <PackageReference Include="Serilog.Sinks.Elasticsearch" Version="10.0.0"/>
        <PackageReference Include="Unidecode.NET" Version="2.1.0"/>
    </ItemGroup>

    <ItemGroup>
        <None Update="Assets/Images/logo.png">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="wwwroot\Assets\dotnet.css"/>
    </ItemGroup>

    <Target Name="EnsureLogsFolder" AfterTargets="Build">
        <!-- Check for Windows -->
        <Exec Command="IF NOT EXIST $(OutDir)Logs mkdir $(OutDir)Logs" Condition=" '$(OS)' == 'Windows_NT' "/>
        <!-- Check for Unix-based systems -->
        <Exec Command="mkdir -p '$(OutDir)Logs'" Condition=" '$(OS)' != 'Windows_NT' "/>
    </Target>

</Project>
